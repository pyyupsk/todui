name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (without v prefix)"
        required: true
        default: "0.1.0"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: todui-linux-x86_64.tar.gz
            platform: linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: todui-linux-aarch64.tar.gz
            platform: linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: todui-macos-x86_64.tar.gz
            platform: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: todui-macos-aarch64.tar.gz
            platform: macos-aarch64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Set up cross-compilation
        if: contains(matrix.target, 'aarch64')
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ contains(matrix.target, 'aarch64-unknown-linux-gnu') }}

      - name: Package binary
        run: |
          mkdir -p dist/todui
          BIN_PATH="target/${{ matrix.target }}/release/todui"
          cp $BIN_PATH dist/todui/
          cp LICENSE dist/todui/
          cp README.md dist/todui/
          if [ -d "completions" ]; then
            cp -r completions dist/todui/
          fi
          if [ -d "man" ]; then
            cp -r man dist/todui/
          fi
          cd dist
          tar -czvf ${{ matrix.artifact_name }} todui
          cd ..

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/${{ matrix.artifact_name }}
          tag_name: v${{ needs.create-release.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version in Cargo.toml
        run: |
          VERSION="${{ needs.create-release.outputs.version }}"
          sed -i.bak "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          rm -f Cargo.toml.bak

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Cargo.toml
          git commit -m "Update installation files for v${{ needs.create-release.outputs.version }}" || echo "No changes to commit"
          git push
